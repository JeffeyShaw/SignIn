<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oldwu.dao.SysQuartzJobLogMapper">
  <resultMap id="BaseResultMap" type="com.oldwu.domain.SysQuartzJobLog">
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="job_name" jdbcType="VARCHAR" property="jobName" />
    <result column="job_group" jdbcType="VARCHAR" property="jobGroup" />
    <result column="invoke_target" jdbcType="VARCHAR" property="invokeTarget" />
    <result column="job_message" jdbcType="VARCHAR" property="jobMessage" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="exception_info" jdbcType="VARCHAR" property="exceptionInfo" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
<sql id="Base_Column_List">
	  	  	      	id,
       	  	      	job_name,
       	  	      	job_group,
       	  	      	invoke_target,
       	  	      	job_message,
       	  	      	status,
       	  	      	exception_info,
       	  	      	start_time,
       	  	    	  	end_time
       	</sql>
  <select id="selectByExample" parameterType="com.oldwu.domain.SysQuartzJobLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_sys_quartz_job_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <delete id="deleteByExample" parameterType="com.oldwu.domain.SysQuartzJobLogExample">
    delete from t_sys_quartz_job_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>

  <delete id="deleteAll">
    delete from t_sys_quartz_job_log
  </delete>
  
  <select id="countByExample" parameterType="com.oldwu.domain.SysQuartzJobLogExample" resultType="java.lang.Long">
    select count(*) from t_sys_quartz_job_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <update id="updateByExampleSelective" parameterType="map">
    update t_sys_quartz_job_log
    <set>
          <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
          <if test="record.jobName != null">
        job_name = #{record.jobName,jdbcType=VARCHAR},
      </if>
          <if test="record.jobGroup != null">
        job_group = #{record.jobGroup,jdbcType=VARCHAR},
      </if>
          <if test="record.invokeTarget != null">
        invoke_target = #{record.invokeTarget,jdbcType=VARCHAR},
      </if>
          <if test="record.jobMessage != null">
        job_message = #{record.jobMessage,jdbcType=VARCHAR},
      </if>
          <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
          <if test="record.exceptionInfo != null">
        exception_info = #{record.exceptionInfo,jdbcType=VARCHAR},
      </if>
          <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
          <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
         
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  
  <update id="updateByExample" parameterType="map">
    update t_sys_quartz_job_log
    set
            	     	 id = #{record.id,jdbcType=VARCHAR},
    	         	     	 job_name = #{record.jobName,jdbcType=VARCHAR},
    	         	     	 job_group = #{record.jobGroup,jdbcType=VARCHAR},
    	         	     	 invoke_target = #{record.invokeTarget,jdbcType=VARCHAR},
    	         	     	 job_message = #{record.jobMessage,jdbcType=VARCHAR},
    	         	     	 status = #{record.status,jdbcType=INTEGER},
    	         	     	 exception_info = #{record.exceptionInfo,jdbcType=VARCHAR},
    	         	     	 start_time = #{record.startTime,jdbcType=TIMESTAMP},
    	         	     	 end_time = #{record.endTime,jdbcType=TIMESTAMP}
    	         <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>